{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistic/Statistics.module.css","components/Friend/Friend.module.css","components/FriendList/FriendList.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/Profile.jsx","components/Statistic/Statistics.jsx","components/Friend/Friend.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","App.js","index.js"],"names":["module","exports","Profile","avatar","name","tag","location","stats","className","s","profile","description","src","alt","statsItem","label","quantity","followers","views","likes","Statistics","title","container","list","map","id","percentage","listItem","style","backgroundColor","Math","floor","random","Friend","isOnline","item","online","offline","width","FriendList","friends","TransactionHistory","items","transactionHistory","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2296786.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3RzPI\",\"description\":\"Profile_description__1VjRp\",\"stats\":\"Profile_stats__3uT4W\",\"statsItem\":\"Profile_statsItem__2fnkB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Statistics_container__bC_Vy\",\"title\":\"Statistics_title__2oMgm\",\"list\":\"Statistics_list__3THkf\",\"listItem\":\"Statistics_listItem__cGXby\",\"label\":\"Statistics_label__2t68G\",\"percentage\":\"Statistics_percentage__VQ9lZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Friend_item__2Xt5V\",\"status\":\"Friend_status__3pJy5\",\"offline\":\"Friend_offline__2kww7 Friend_status__3pJy5\",\"online\":\"Friend_online__3n97W Friend_status__3pJy5\",\"avatar\":\"Friend_avatar__S03O_\",\"name\":\"Friend_name__2iLsH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FriendList_container__8RH_b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__1_7C7\"};","import s from './Profile.module.css';\nimport PropTypes from 'prop-types';\n/*<Profile\n  name={user.name}\n  tag={user.tag}\n  location={user.location}\n  avatar={user.avatar}\n  stats={user.stats}\n/>\n*/\n\nconst Profile = function ({\n  avatar = 'https://www.flaticon.com/svg/static/icons/svg/3135/3135715.svg',\n  name,\n  tag,\n  location,\n  stats,\n}) {\n  return (\n    <div className={s.profile}>\n      <div className={s.description}>\n        <img\n          src={avatar}\n          alt={name}\n          className={s.avatar}\n        />\n        <p className={s.tag}>{tag}</p>\n        <p className={s.name}>{name}</p>\n        <p className={s.location}>\n          {location}\n        </p>\n      </div>\n      <ul className={s.stats}>\n        <li className={s.statsItem}>\n          <span className={s.label}>\n            Followers\n          </span>\n          <span className={s.quantity}>\n            {stats.followers}\n          </span>\n        </li>\n        <li className={s.statsItem}>\n          <span className={s.label}>\n            Views\n          </span>\n          <span className={s.quantity}>\n            {stats.views}\n          </span>\n        </li>\n        <li className={s.statsItem}>\n          <span className={s.label}>\n            Likes\n          </span>\n          <span className={s.quantity}>\n            {stats.likes}\n          </span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.object.isRequired,\n};\n\nexport default Profile;\n","import s from './Statistics.module.css';\nimport PropTypes from 'prop-types';\n\n//<Statistics title=\"Upload stats\" stats={statisticalData} />;\n//<Statistics stats={statisticalData} />;\n\nfunction Statistics({ title, stats }) {\n  return (\n    <section className={s.container}>\n      {title && (\n        <h2 className={s.title}>\n          {title}\n        </h2>\n      )}\n\n      <ul className={s.list}>\n        {stats.map(\n          ({\n            id,\n            label,\n            percentage,\n          }) => (\n            <li\n              className={s.listItem}\n              key={id}\n              style={{\n                backgroundColor:\n                  getRandomColor(),\n              }}\n            >\n              <span className={s.label}>\n                {label}\n              </span>\n              <span\n                className={s.percentage}\n              >\n                {percentage}%\n              </span>\n            </li>\n          ),\n        )}\n      </ul>\n    </section>\n  );\n}\n\n//const red = Math.floor(Math.random() * 255);\n//const green = Math.floor(Math.random() * 255);\n//const blue = Math.floor(Math.random() * 255);\n\nfunction getRandomColor() {\n  return `rgb(${Math.floor(\n    Math.random() * 255,\n  )}, ${Math.floor(\n    Math.random() * 255,\n  )}, ${Math.floor(\n    Math.random() * 255,\n  )})`;\n}\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label:\n        PropTypes.string.isRequired,\n      percentage:\n        PropTypes.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default Statistics;\n","import s from './Friend.module.css';\nimport PropTypes from 'prop-types';\n\n/*<li class=\"item\">\n  <span class=\"status\"></span>\n  <img class=\"avatar\" src=\"\" alt=\"\" width=\"48\" />\n  <p class=\"name\"></p>\n</li>*/\n\nfunction Friend({\n  name,\n  isOnline = false,\n  avatar,\n}) {\n  return (\n    <li className={s.item}>\n      <span\n        className={\n          isOnline\n            ? s.online\n            : s.offline\n        }\n      ></span>\n      <img\n        className={s.avatar}\n        src={avatar}\n        alt={name}\n        width=\"48\"\n      />\n      <p className={s.name}>{name}</p>\n    </li>\n  );\n}\n\nFriend.propTypes = {\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n  avatar: PropTypes.string.isRequired,\n};\n\nexport default Friend;\n","import s from './FriendList.module.css';\nimport PropTypes from 'prop-types';\nimport Friend from '../Friend/Friend';\n\nfunction FriendList({ friends }) {\n  return (\n    <div>\n      <ul className={s.container}>\n        {friends.map(\n          ({\n            id,\n            name,\n            avatar,\n            isOnline,\n          }) => (\n            <Friend\n              key={id}\n              avatar={avatar}\n              name={name}\n              isOnline={isOnline}\n            />\n          ),\n        )}\n      </ul>\n    </div>\n  );\n}\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default FriendList;\n","import s from './TransactionHistory.module.css';\nimport PropTypes from 'prop-types';\n\n/*<table class=\"transaction-history\">\n  <thead>\n    <tr>\n      <th>Type</th>\n      <th>Amount</th>\n      <th>Currency</th>\n    </tr>\n  </thead>\n\n  <tbody>\n    <tr>\n      <td>Invoice</td>\n      <td>125</td>\n      <td>USD</td>\n    </tr>\n    <tr>\n      <td>Withdrawal</td>\n      <td>85</td>\n      <td>USD</td>\n    </tr>\n  </tbody>\n</table>*/\nfunction TransactionHistory({ items }) {\n  return (\n    <table\n      className={s.transactionHistory}\n    >\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {items.map(\n          ({\n            id,\n            type,\n            amount,\n            currency,\n          }) => (\n            <tr key={id}>\n              <td>{type}</td>\n              <td>{amount}</td>\n              <td>{currency}</td>\n            </tr>\n          ),\n        )}\n      </tbody>\n    </table>\n  );\n}\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount:\n        PropTypes.string.isRequired,\n      currency:\n        PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","//import logo from './logo.svg';\nimport './App.css';\n\nimport user from './data/user.json';\nimport Profile from './components/Profile/Profile';\n\nimport statisticalData from './data/statistical-data.json';\nimport Statistics from './components/Statistic/Statistics';\n\nimport friends from './data/friends.json';\nimport FriendList from './components/FriendList/FriendList';\n\nimport transactions from './data/transactions.json';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div>\n        <Profile\n          name={user.name}\n          tag={user.tag}\n          location={user.location}\n          avatar={user.avatar}\n          stats={user.stats}\n        />\n      </div>\n      <div>\n        <Statistics\n          stats={statisticalData}\n        />\n      </div>\n      <div>\n        <FriendList friends={friends} />\n      </div>\n      <div>\n        <TransactionHistory\n          items={transactions}\n        />\n        ;\n      </div>\n    </div>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}